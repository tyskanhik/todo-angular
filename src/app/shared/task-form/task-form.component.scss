@use '../../../styles/variables' as vars;
@use '../../../styles/themes' as *;
@use 'sass:map';

.task-form {
  display: grid;
  gap: 15px;
  max-width: 600px;
  margin: 0 auto;
  padding: map.get(vars.$spacers, 4);
  background-color: var(--color-bg-secondary);
  border-radius: vars.$border-radius-lg;
  box-shadow: var(--box-shadow-md);
  transition: vars.$transition-base;

  @media (min-width: map.get(vars.$breakpoints, md)) {
    padding: map.get(vars.$spacers, 5);
  }
}

.form-group {
  margin-bottom: map.get(vars.$spacers, 4);
  position: relative;
  
  label {
    display: block;
    margin-bottom: map.get(vars.$spacers, 2);
    font-weight: vars.$font-weight-medium;
    color: var(--color-text);
    transition: vars.$transition-base;
  }

  input[type="text"],
  textarea {
    width: 100%;
    padding: map.get(vars.$spacers, 3);
    font-size: var(--font-size-base);
    background-color: var(--color-bg);
    border: 1px solid var(--color-border);
    border-radius: var(--border-radius);
    color: var(--color-text);
    transition: vars.$transition-base;

    &:focus {
      border-color: var(--color-primary);
      outline: none;
      box-shadow: 0 0 0 2px rgba(var(0 96 69), 0.1);
    }

    &::placeholder {
      color: var(--color-text-secondary);
      opacity: 0.7;
    }
  }

  textarea {
    min-height: 120px;
    resize: vertical;
  }
}

#checkbox-label {
  display: inline-flex;
  gap: 10px;
  align-items: center;
  cursor: pointer;
  color: var(--color-text);
  transition: vars.$transition-base;

  input[type="checkbox"] {
    appearance: none;
    width: 1.25rem;
    height: 1.25rem;
    border: 2px solid var(--color-border);
    border-radius: vars.$border-radius-sm;
    cursor: pointer;
    flex-shrink: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
    margin: 0;

    &:hover {
      border-color: var(--color-primary);
    }

    &:checked {
      background-color: var(--color-primary);
      border-color: var(--color-primary);
      position: relative;

      &::after {
        content: "✓";
        color: white;
        font-size: 0.75rem;
        position: absolute;
      }
    }
  }
}

.form-actions {
  display: flex;
  justify-content: flex-end;
  gap: map.get(vars.$spacers, 3);
  margin-top: map.get(vars.$spacers, 2);

  button {
    padding: map.get(vars.$spacers, 3) map.get(vars.$spacers, 4);
    font-size: var(--font-size-base);
    font-weight: vars.$font-weight-medium;
    border-radius: var(--border-radius);
    cursor: pointer;
    transition: vars.$transition-base;
  }
}

.cancel-button {
  background-color: transparent;
  color: var(--color-text-secondary);
  border: 1px solid var(--color-border);

  &:hover {
    background-color: var(--color-bg);
    color: var(--color-text);
    border-color: var(--color-text-secondary);
  }
}

.submit-button {
  background-color: var(--color-primary);
  color: white;
  border: none;

  &:hover:not(:disabled) {
    background-color: var(--color-primary-hover);
    transform: translateY(-1px);
    box-shadow: var(--box-shadow-sm);
  }

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    background-color: var(--color-text-secondary);
  }
}

/* Валидация формы */
.ng-invalid:not(form).ng-touched {
  border-color: var(--color-danger) !important;

  &:focus {
    box-shadow: 0 0 0 2px rgba(var(--color-danger-rgb), 0.1) !important;
  }
}

.error-message {
  position: absolute;
  left: 0;
  top: 100%;
  margin-top: map.get(vars.$spacers, 1);
  color: var(--color-danger);
  font-size: vars.$font-size-sm;
  width: 100%;
  animation: fadeIn 0.3s ease-out;
  display: flex;
  align-items: center;
  gap: map.get(vars.$spacers, 2);
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}